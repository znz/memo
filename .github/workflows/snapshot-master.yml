name: snapshot-master

on:
  repository_dispatch:
    types:
      - "make-snapshot"
      - "snapshot-master"
  workflow_dispatch:
    inputs:
      RUBY_PATCH_URL:
        description: Patch URL
        required: false

jobs:
  make-snapshot:
    runs-on: ubuntu-latest
    env:
      archname: snapshot-master
    steps:
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      - uses: ./.github/actions/make-snapshot
      - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: Packages
          path: pkg
      - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: Info
          path: pkg/info
      - name: Check pkg
        run: |
          set -x
          ls -al pkg
          7z x pkg/*.zip $archname/revision.h
          cat $archname/revision.h
          7z l pkg/*.zip $archname/ChangeLog

  macos:
    needs: make-snapshot
    strategy:
      matrix:
        #test_task: [check, test-bundler-parallel, test-bundled-gems]
        test_task: [test-bundled-gems]
        os: [macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - run: env | sort
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: Packages
          path: pkg
      - name: Extract
        run: tar xf pkg/*.tar.xz
      - name: Apply patch
        run: |
          set -x
          curl -sSL "${RUBY_PATCH_URL}" -o ruby.patch
          cd snapshot-*/
          git apply ../ruby.patch
        shell: bash
        env:
          RUBY_PATCH_URL: "${{ github.event.inputs.RUBY_PATCH_URL }}"
        if: "${{ github.event.inputs.RUBY_PATCH_URL != '' }}"
      - name: Install libraries
        run: |
          with_retry () {
            "$@" || { sleep 5 && "$@"; } || { sleep 60 && "$@"; }
          }
          set -x
          with_retry brew update
          with_retry brew upgrade
          with_retry brew install gdbm gmp libffi openssl@1.1 zlib autoconf automake libtool readline
      - name: Set ENV
        run: |
          echo "JOBS=-j$((1 + $(sysctl -n hw.activecpu)))" >> $GITHUB_ENV
      - name: configure
        run: cd snapshot-*/ && ./configure --with-openssl-dir=$(brew --prefix openssl@1.1) --with-readline-dir=$(brew --prefix readline)
      - name: make
        run: cd snapshot-*/ && make $JOBS
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@b3db6e16e597d92037c8647e54acc5d2b1b48dee # v3.18
      - name: Tests
        run: cd snapshot-*/ && make $JOBS -s ${{ matrix.test_task }}
        env:
          RUBY_TESTOPTS: "-q --tty=no"
          TEST_BUNDLED_GEMS_ALLOW_FAILURES: "xmlrpc,rss,rexml"
      # leaked-globals since 2.7
      - name: Leaked Globals
        run: cd snapshot-*/ && make -s leaked-globals
        if: matrix.test_task == 'check'
      - name: make install without root privilege
        run: cd snapshot-*/ && make $JOBS install DESTDIR="/tmp/destdir"
        if: matrix.test_task == 'check'
      - name: make install
        run: cd snapshot-*/ && sudo make $JOBS install
        if: matrix.test_task == 'check'
      - name: ruby -v
        run: /usr/local/bin/ruby -v
        if: matrix.test_task == 'check'
